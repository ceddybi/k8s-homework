name: production

on:
  push:
    branches:
      - "master"

env:
  REGISTRY: ${{ secrets.REGISTRY }}
  PROJECT: ${{ secrets.PROJECT }}
  IMAGE: ${{ secrets.IMAGE }}
  DEPLOYMENT: ${{ secrets.DEPLOYMENT }}
  K8S_CONFIG: ${{ secrets.K8S_CONFIG }}

jobs:
  setup-build-publish-deploy:
    name: deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Get short SHA
        id: slug
        run: echo "::set-output name=sha7::$(git rev-parse --short HEAD)"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: <aws-account-number>.dkr.ecr.<region>.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}:${{ env.PROJECT }}-${{ env.IMAGE }}-${{ steps.slug.outputs.sha7 }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          platforms: linux/arm64/v8
          build-args: |
            GITHUB_SHA=${{ github.sha }}
            GITHUB_REF=${{ github.ref }}

      - name: Set up k8s
        run: sudo snap install kubectl --classic

      # Get the cluster credentials so we can deploy to the cluster
      - name: Save Kubernetes Configuration
        run: mkdir -p $HOME/.kube/ && echo "$K8S_CONFIG" > $HOME/.kube/config && chmod +x $HOME/.kube/config

      # Deploy the Docker image to the GKE cluster
      - name: Deploy/Update new Image to Kubernetes
        run: kubectl set image deployment/$DEPLOYMENT $DEPLOYMENT=$REGISTRY:$PROJECT-$IMAGE-${GITHUB_SHA:0:7}            

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
